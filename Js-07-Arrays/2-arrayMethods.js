// ?==============================================
// ?            DIZI ERISIM METOTLARI
// ?==============================================
//Array Property
/* -------------------------------------------------------------------------- */
/*                                   length                                   */
/* -------------------------------------------------------------------------- */
const number = [3, 5, 2, "4", "bes", "dort", 3, 6, "bes", 5,56]

console.log( `Number ArrayÄ± ${number.length} eleman sayÄ±sÄ±na sahiptir`)

/* -------------------------------------------------------------------------- */
//!                                  INCLUDES()                                */
/* -------------------------------------------------------------------------- */
//* Bir elemanÄ±n dizide bulunup bulunmadÄ±ÄŸÄ±nÄ± true veya false olarak dÃ¶ndÃ¼rÃ¼r.

console.log(number.includes(5));
console.log(number.includes(9))

// const userList=["neolursangel","sivasli19","kelalaka","guldurmebeni","excalibur17","pardone"]
// const guest = prompt("kullanÄ±cÄ± adÄ± gir.")

// userList.includes(guest) ? console.log("Bu kullanÄ±cÄ± hali hazÄ±rda var") : console.log("KayÄ±t olunuz.");
console.clear()
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
//!                          indexOf(), lastIndexOf()                         */
/* -------------------------------------------------------------------------- */

console.log(number);

console.log(number.indexOf("bes"));
console.log(number.indexOf("yedi"));


if (number.indexOf("bes")<0){
    console.log("Bu Ã¶ÄŸe bulunamadÄ±.");
    
} else {
    console.log(`AradÄ±ÄŸÄ±nÄ±z Ã¶ÄŸenin indeks numarasÄ± ${number.indexOf("bes")}'tir.`);
}

// LastIndexOf()
// Sondan baÅŸlayarak bakar ilk gÃ¶rÃ¼dÄŸÃ¼ indeks numarasÄ±nÄ± verir.

/* -------------------------------------------------------------------------- */
//!                          join                                             */
/* -------------------------------------------------------------------------- */

//* Dizideki tÃ¼m elemanlarÄ± belirtilen bir ayraÃ§ ile birleÅŸtirerek? bir string deÄŸer dÃ¶ndÃ¼rÃ¼r.

//* Join bir iÅŸaret yada bilgi parametresi verilmezse default deÄŸer olarak array'deki deÄŸerlerin arasÄ±na , koyarak birleÅŸtirir.

const statement=["oku","da","adam","ol"]

// ama kendimiz parantez iÃ§ine hangi deÄŸeri koyarsak onu aralarÄ±na ekleyecektir.

console.log(statement.join("ðŸŽˆ"))
console.log(statement);
const newStr = statement.join("ðŸŽˆ")
console.log(newStr);
console.log(statement);

/* -------------------------------------------------------------------------- */
//!                        slice()                                           */
/* -------------------------------------------------------------------------- */

// slice(start,end) son deÄŸer dahil deÄŸil.
// end verilmezse sonuna kadar olanÄ± alÄ±r.

console.log(statement);
console.log(statement.slice(0,3));
console.log(statement)
